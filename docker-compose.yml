version: '3.8'

services:
  api-gateway:
    build:
      context: services
      dockerfile: api_gateway/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - USER_SERVICE_URL=http://taskmanager-user-service-1:8000/user-service
      - QUEST_SERVICE_URL=http://taskmanager-quest-service-1:8001/quest-service
      - BOARD_SERVICE_URL=http://taskmanager-board-service-1:8002/board-service
      - ADVENTURE_SERVICE_URL=http://taskmanager-adventure-service-1:8003/adventure-service
      - PARTY_SERVICE_URL=http://taskmanager-party-service-1:8004/party-service
      - API_KEY=${API_KEY}
      - INSIDE_API_KEY=${INSIDE_API_KEY}
    depends_on:
      - user-service
      - quest-service
      - board-service
      - adventure-service
      - party-service

  user-service:
    build:
      context: services
      dockerfile: user_service/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://${DB_USER}:${DB_PASS}@user-db:${DB_PORT}/${DB_NAME}
      - API_KEY=${INSIDE_API_KEY}
      - SECRET=${SECRET}
      - PUBLIC_KEY=${PUBLIC_KEY}
      - PRIVATE_KEY=${PRIVATE_KEY}
    depends_on:
      - user-db

  user-db:
    image: postgres:latest
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}

  quest-service:
    build:
      context: services
      dockerfile: quest_service/Dockerfile
    ports:
      - "8001:8001"
    environment:
      - DATABASE_URL=postgresql+asyncpg://${DB_USER}:${DB_PASS}@quest-db:${DB_PORT}/${DB_NAME}
      - API_KEY=${INSIDE_API_KEY}
      - INSIDE_API_KEY=${INSIDE_API_KEY}
    depends_on:
      - quest-db

  quest-db:
    image: postgres:latest
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}

  board-service:
    build:
      context: services
      dockerfile: board_service/Dockerfile
    ports:
      - "8002:8002"
    environment:
      - DATABASE_URL=postgresql+asyncpg://${DB_USER}:${DB_PASS}@board-db:${DB_PORT}/${DB_NAME}
      - API_KEY=${INSIDE_API_KEY}
    depends_on:
      - board-db

  board-db:
    image: postgres:latest
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}

  adventure-service:
    build:
      context: services
      dockerfile: adventure_service/Dockerfile
    ports:
      - "8003:8003"
    environment:
      - DATABASE_URL=postgresql+asyncpg://${DB_USER}:${DB_PASS}@adventure-db:${DB_PORT}/${DB_NAME}
      - API_KEY=${INSIDE_API_KEY}
    depends_on:
      - adventure-db

  adventure-db:
    image: postgres:latest
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}

  party-service:
    build:
      context: services
      dockerfile: party_service/Dockerfile
    ports:
      - "8004:8004"
    environment:
      - DATABASE_URL=postgresql+asyncpg://${DB_USER}:${DB_PASS}@party-db:${DB_PORT}/${DB_NAME}
      - API_KEY=${INSIDE_API_KEY}
    depends_on:
      - party-db

  party-db:
    image: postgres:latest
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}